syntax = "proto3";

package ds_crm;

import "google/api/annotations.proto";

option go_package = "ds_crmpb";

service DSCrm {
  rpc GetTaskByID(GetTaskByIDRequest) returns (GetTaskByIDResponse) {
    option (google.api.http) = {
      get: "/api/task/{task_id}"
    };
  }

  rpc GetTasksOnStatus(GetTasksOnStatusRequest) returns (GetTasksOnStatusResponse) {
    option (google.api.http) = {
      get: "/api/task/status/{status_name}"
    };
  }

  rpc GetUserTasks(GetUserTasksRequest) returns (GetUserTasksResponse) {
    option (google.api.http) = {
      get: "/api/task/user/{user_id}"
    };
  }

  rpc TaskCreate(TaskCreateRequest) returns (TaskCreateResponse) {
    option (google.api.http) = {
      post: "/api/task/create"
      body: "*"
    };
  }

  rpc TaskRemove(TaskRemoveRequest) returns (TaskRemoveResponse) {
    option (google.api.http) = {
      post: "/api/task/remove"
      body: "*"
    };
  }

  rpc ChangeTaskStatus(ChangeTaskStatusRequest) returns (ChangeTaskStatusResponse) {
    option (google.api.http) = {
      post: "/api/task/status-change"
      body: "*"
    };
  }

  rpc DoCommentTask(DoCommentTaskRequest) returns (DoCommentTaskResponse) {
    option (google.api.http) = {
      post: "/api/task/comment"
      body: "*"
    };
  }
}

message GetTaskByIDRequest {
  int64 task_id = 1;
}

message GetTaskByIDResponse {

}


message GetTasksOnStatusRequest {
  string status_name = 1;
}

message GetTasksOnStatusResponse {

}


message GetUserTasksRequest {
  int64 user_id = 1;
}

message GetUserTasksResponse {

}


message TaskCreateRequest {

}

message TaskCreateResponse {

}


message TaskRemoveRequest {
  int64 task_id = 1;
}

message TaskRemoveResponse {

}


message ChangeTaskStatusRequest {
  int64 task_id = 1;
  string new_status = 2;
}

message ChangeTaskStatusResponse {

}


message DoCommentTaskRequest {
  int64 task_id = 1;
  string comment_text = 2;
}

message DoCommentTaskResponse {

}